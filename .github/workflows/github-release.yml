name: Build GitHub release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true

jobs:
  package:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    steps:
      -
        name: Extract artifacts from the docker image
        id: extract-std
        uses: shrink/actions-docker-extract@v1
        with:
          image: ghcr.io/elastic/harp/harp-artifacts:v${{ github.event.inputs.release }}
          path: '/app/.'
      -
        name: Extract FIPS artifacts from the docker image
        id: extract-fips
        uses: shrink/actions-docker-extract@v1
        with:
          image: ghcr.io/elastic/harp/harp-artifacts-fips:v${{ github.event.inputs.release }}
          path: '/app/.'
      -
        name: Assemble a package
        run: |
          mkdir .dist
          cp ${{ steps.extract-std.outputs.destination }}/* .dist/
          cp ${{ steps.extract-fips.outputs.destination }}/* .dist/
      -
        name: upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: binaries
          path: .dist/
          retention-days: 1

  macos-release:
    needs: package
    runs-on: macos-latest
    permissions:
      packages: read
      contents: write
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Download-Binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: .dist/
      -
        name: Cleanup
        shell: bash
        run: |
          cd .dist/
          rm -f !(harp-darwin-*)
      -
        name: Import Code-Signing Certificates
        uses: Apple-Actions/import-codesign-certs@v1
        with:
          p12-file-base64: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_P12_BASE64 }}
          p12-password: ${{ secrets.APPLE_DEVELOPER_CERTIFICATE_PASSWORD }}
      -
        name: Install gon via HomeBrew for code signing and app notarization
        run: |
          brew tap mitchellh/gon
          brew install mitchellh/gon/gon
      -
        name: Sign the mac binaries with Gon
        env:
          AC_USERNAME: ${{ secrets.AC_USERNAME }}
          AC_PASSWORD: ${{ secrets.AC_PASSWORD }}
        run: |
          cd .dist
          gon -log-level=debug -log-json ../build/artifact/gon.hcl
      -
        name: Upload binary artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-binaries
          path: .dist/
          retention-days: 1

  github-release:
    needs: macos-release
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    steps:
      -
        name: Download binaries
        uses: actions/download-artifact@v2
        with:
          name: binaries
          path: .dist/
      -
        name: Download MacOS signed binaries
        uses: actions/download-artifact@v2
        with:
          name: macos-binaries
          path: .dist/
      -
        name: Generate provenance for Release
        uses: philips-labs/slsa-provenance-action@v0.7.2
        with:
          command: generate
          subcommand: files
          arguments: --artifact-path .dist --output-path '.dist/provenance.json'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      -
        name: Sign
        shell: bash
        run: |
          #!/bin/bash
          shopt -s expand_aliases
          cd .dist
          FILES="*"
          for f in $FILES;
          do
            case $f in
            *.sbom.json)
                gzip "$f"
                ;;
            provenance.json)
                cosign sign-blob --key <(echo -n "${COSIGN_KEY}") "$f" > "$f.sig"
                ;;
            harp-*)
                sha256sum "$f" | cut -d " " -f 1 > "$f.sha256"
                cosign sign-blob --key <(echo -n "${COSIGN_KEY}") "$f" > "$f.sig"
                ;;
            esac
          done
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Verify
        shell: bash
        run: |
          #!/bin/bash
          shopt -s expand_aliases
          curl -sLO https://raw.githubusercontent.com/elastic/harp/cmd/harp/v${{ github.event.inputs.release }}/build/artifact/cosign.pub
          cd .dist
          FILES="*"
          for f in $FILES;
          do
            if [[ -f "$f.sig" ]];
            then
              cosign verify-blob --key ../cosign.pub --signature "$f.sig" $f
            fi
          done
      -
        name: Upload to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: '.dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: cmd/harp/v${{ github.event.inputs.release }}
