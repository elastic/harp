name: Build GitHub release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true

jobs:
  package:
    runs-on: ubuntu-latest
    permissions:
      packages: read
      contents: write
    steps:
      -
        name: Extract artifacts from the docker image
        id: extract-std
        uses: shrink/actions-docker-extract@v1
        with:
          image: ghcr.io/elastic/harp/harp-artifacts:v${{ github.event.inputs.release }}
          path: '/app/.'
      -
        name: Extract FIPS artifacts from the docker image
        id: extract-fips
        uses: shrink/actions-docker-extract@v1
        with:
          image: ghcr.io/elastic/harp/harp-artifacts-fips:v${{ github.event.inputs.release }}
          path: '/app/.'
      -
        name: Assemble a package
        run: |
          mkdir .dist
          cp ${{ steps.extract-std.outputs.destination }}/* .dist/
          cp ${{ steps.extract-fips.outputs.destination }}/* .dist/
          cd .dist
          find . -maxdepth 1 -mindepth 1 -type f -exec tar czvf {}.tar.gz {} --remove-files \;
      -
        name: Generate provenance for Release
        uses: philips-labs/slsa-provenance-action@v0.6.0
        with:
          command: generate
          subcommand: files
          arguments: --artifact-path .dist --output-path '.dist/provenance.json'
        env:
          GITHUB_TOKEN: "${{ secrets.GITHUB_TOKEN }}"
      -
        uses: sigstore/cosign-installer@v2.0.1
      -
        name: Sign
        run: |
          cd .dist
          for f in harp-*; do
            sha256sum $f > $f.sha256;
            cosign sign-blob --key <(echo -n "${COSIGN_KEY}") $f > $.sig;
          end
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Upload to release
        uses: AButler/upload-release-assets@v2.0
        with:
          files: '.dist/*'
          repo-token: ${{ secrets.GITHUB_TOKEN }}
          release-tag: cmd/harp/v${{ github.event.inputs.release }}
