name: Docker Release

on:
  workflow_dispatch:
    inputs:
      release:
        description: 'Release version'
        required: true

permissions:
  packages: write

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  build-docker-images:
    name: Build Docker Images
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@29109295f81e9208d7d86ff1c6c12d2833863392 # v3
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@b5ca514318bd6ebac0fb2aedd5d36ec1b5c232a2 # v3
      -
        name: Install Cosign
        uses: sigstore/cosign-installer@d7d6bc7722e3daa8354c50bcb52f4837da5e9b6a # v3.8.1
      -
        name: Login to GHCR
        uses: docker/login-action@74a5d142397b4f367a81961eba4e8cd7edddf772 # v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@902fa8ec7d6ecbf8d84d538b9b233a880e428804 # v5
        with:
          images: |
            ghcr.io/elastic/harp
      -
        id: build-and-push
        name: Build and push
        uses: docker/build-push-action@471d1dc4e07e5cdedd4c2171150001c434f0b7a4 # v6
        with:
          context: .
          platforms: linux/amd64,linux/arm64
          push: true
          build-args: VERSION=${{ github.event.inputs.release }}
          tags: |
            ghcr.io/${{ github.repository }}:latest
            ghcr.io/${{ github.repository }}:v${{ github.event.inputs.release }}
          labels: ${{ steps.meta.outputs.labels }}
      -
        name: Create SBOM
        uses: anchore/sbom-action@f325610c9f50a54015d37c8d16cb3b0e2c8f4de0 # v0
        with:
          image: ghcr.io/${{ github.repository }}@${{ steps.build-and-push.outputs.digest }}
          registry-username: ${{ github.actor }}
          registry-password: ${{ github.token }}
          artifact-name: sbom.spdx
          format: spdx
      -
        name: Sign image and add attestations
        run: |
          echo -n "${COSIGN_PASSWORD}" | \
          cosign sign --key <(echo -n "${COSIGN_KEY}") \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            ghcr.io/${{ github.repository }}@${{ steps.build-and-push.outputs.digest }}
          cosign attach sbom --sbom sbom.spdx ghcr.io/${{ github.repository }}@${{ steps.build-and-push.outputs.digest }}
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Verify the signature
        run: |
          cosign verify --key build/artifact/cosign.pub ghcr.io/${{ github.repository }}@${{ steps.build-and-push.outputs.digest }}
