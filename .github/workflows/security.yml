name: Security

on:
  push:
    branches:
      - main
  pull_request:

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.ref != 'refs/heads/main' }}

jobs:
  vulns:
    name: Nancy scanner
    continue-on-error: true
    runs-on: ubuntu-latest
    steps:
      -
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      -
        uses: actions/setup-go@6edd4406fa81c3da01a34fa6f6343087c207a568 # v3
        with:
          go-version: 1.23
      -
        name: Run go list
        run: go list -json -m all > go.list
      -
        name: Nancy
        uses: sonatype-nexus-community/nancy-github-action@726e338312e68ecdd4b4195765f174d3b3ce1533 # v1.0.3

  trivy:
    name: Trivy scanner
    continue-on-error: true
    runs-on: ubuntu-latest
    permissions:
      contents: read
      security-events: write
      pull-requests: read

    steps:
      -
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      -
        name: Run Trivy vulnerability scanner in repo mode
        uses: aquasecurity/trivy-action@6c175e9c4083a92bbca2f9724c8a5e33bc2d97a5 # master
        with:
          scan-type: 'fs'
          ignore-unfixed: true
          format: 'template'
          template: '@/contrib/sarif.tpl'
          output: 'trivy-results.sarif'
          severity: 'CRITICAL'
      -
        name: Upload Trivy scan results to GitHub Security tab
        uses: github/codeql-action/upload-sarif@6bb031afdd8eb862ea3fc1848194185e076637e5 # v3
        with:
          sarif_file: 'trivy-results.sarif'

#  snyk:
#    name: Snyk scanner
#    continue-on-error: true
#    if: (github.action != 'dependabot[bot]')
#    runs-on: ubuntu-latest
#    permissions:
#      contents: read
#      security-events: write
#      pull-requests: read
#
#    steps:
#      -
#        uses: actions/checkout@v4
#      -
#        name: Run Snyk to check for vulnerabilities
#        uses: snyk/actions/golang@master
#        continue-on-error: true # To make sure that SARIF upload gets called
#        env:
#          SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
#        with:
#          args: --sarif-file-output=snyk-results.sarif
#      -
#        name: Upload result to GitHub Code Scanning
#        uses: github/codeql-action/upload-sarif@v3
#        with:
#          sarif_file: snyk-results.sarif

  semgrep:
    name: Static analysis (semgrep)
    continue-on-error: true
    runs-on: ubuntu-latest
    if: (github.action != 'dependabot[bot]')
    permissions:
      contents: read
      security-events: write
      pull-requests: read

    steps:
      -
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      -
        uses: returntocorp/semgrep-action@713efdd345f3035192eaa63f56867b88e63e4e5d # v1
        with:
          generateSarif: "1"
          config: >-
            p/security-audit
            p/secrets
            p/supply-chain
            p/docker
            p/golang
            p/trailofbits
      -
        name: Upload result to GitHub Code Scanning
        uses: github/codeql-action/upload-sarif@6bb031afdd8eb862ea3fc1848194185e076637e5 # v3
        with:
          sarif_file: semgrep.sarif
