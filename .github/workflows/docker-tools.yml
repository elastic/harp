name: Build and push docker tools

env:
  REGISTRY: ghcr.io

on: workflow_dispatch

jobs:
  build-push:
    runs-on: ubuntu-latest
    permissions:
      packages: write
      security-events: write
      contents: read

    strategy:
      fail-fast: false
      matrix:
        include:
          # normal
          - golang-image: "golang:1.17"
            golang-version: "1.17.7"
            goboring-version: ""
            tools-image: harp-tools
            fips-mode: 0
          # fips
          - golang-image: "goboring/golang:1.16.7b7"
            golang-version: "1.17.6"
            goboring-version: "1.17.6b7"
            tools-image: harp-tools-fips
            fips-mode: 1
    steps:
      -
        name: Check out the repo
        uses: actions/checkout@v2
      -
        name: Set up Go
        uses: actions/setup-go@v2
        with:
          go-version: 1.17
      -
        name: Set up Docker Buildx
        id: buildx
        uses: docker/setup-buildx-action@v1
        with:
          install: true
      -
        name: Cache Docker layers
        uses: actions/cache@v2
        with:
          path: /tmp/.buildx-cache
          key: ${{ runner.os }}-buildx-dev-${{ matrix.golang-image }}-${{ matrix.golang-version }}
          restore-keys: |
            ${{ runner.os }}-buildx-dev-${{ matrix.golang-image }}-${{ matrix.golang-version }}
      -
        name: Set Dockerfile settings
        run: |
          echo Building $DOCKER_IMAGE_NAME with $GOLANG_IMAGE:$GOLANG_VERSION
          echo "DOCKERFILE_ONLY=1" >> $GITHUB_ENV
          echo "GOLANG_IMAGE=$GOLANG_IMAGE" >> $GITHUB_ENV
          echo "GOLANG_VERSION=$GOLANG_VERSION" >> $GITHUB_ENV
          echo "GOBORING_VERSION=$GOBORING_VERSION" >> $GITHUB_ENV
          echo "FIPS_MODE=$FIPS_MODE" >> $GITHUB_ENV
          echo "DOCKER_IMAGE_NAME=$DOCKER_IMAGE_NAME" >> $GITHUB_ENV
        env:
          DOCKERFILE_ONLY: 1
          GOLANG_IMAGE: ${{ matrix.golang-image }}
          GOLANG_VERSION: ${{ matrix.golang-version }}
          GOBORING_VERSION: ${{ matrix.goboring-version }}
          DOCKER_IMAGE_NAME: ${{ matrix.tools-image }}
          FIPS_MODE: ${{ matrix.fips-mode}}
      -
        name: Generate Dockerfile
        uses: magefile/mage-action@v1
        with:
          version: latest
          args: docker:tools
      -
        name: Log in to the Container registry
        uses: docker/login-action@f054a8b539a109f9f41c372932f1ae047eff08c9
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        name: Build Docker image
        id: docker_build
        uses: docker/build-push-action@v2
        with:
          context: .
          file: Dockerfile.tools
          pull: true
          push: ${{ github.event_name != 'pull_request' }}
          tags: |
            ghcr.io/elastic/harp/${{ matrix.tools-image }}:latest
          cache-from: type=local,src=/tmp/.buildx-cache
          cache-to: type=local,mode=max,dest=/tmp/.buildx-cache-new
          build-args: |
            GOLANG_IMAGE=${{ matrix.golang-image }}
            GOLANG_VERSION=${{ matrix.golang-version }}
      -
        name: Create SBOM
        uses: anchore/sbom-action@v0
        with:
          image: ghcr.io/elastic/harp/${{ matrix.tools-image }}:latest
          registry-username: ${{ github.actor }}
          registry-password: ${{ github.token }}
          artifact-name: sbom.spdx
          format: spdx
      -
        uses: sigstore/cosign-installer@main
      -
        name: Sign image and add attestations
        run: |
          echo -n "${COSIGN_PASSWORD}" | \
          cosign sign --key <(echo -n "${COSIGN_KEY}") \
            -a "repo=${{ github.repository }}" \
            -a "workflow=${{ github.workflow }}" \
            -a "ref=${{ github.sha }}" \
            ghcr.io/elastic/harp/${{ matrix.tools-image }}:latest
          cosign attach sbom --sbom sbom.spdx ghcr.io/elastic/harp/${{ matrix.tools-image }}:latest
        env:
          COSIGN_KEY: ${{ secrets.COSIGN_KEY }}
          COSIGN_PASSWORD: ${{ secrets.COSIGN_PASSWORD }}
      -
        name: Verify the signature
        run: |
          cosign verify --key build/artifact/cosign.pub ghcr.io/elastic/harp/${{ matrix.tools-image }}:latest
      -
        name: Move cache
        run: |
          rm -rf /tmp/.buildx-cache
          mv /tmp/.buildx-cache-new /tmp/.buildx-cache
